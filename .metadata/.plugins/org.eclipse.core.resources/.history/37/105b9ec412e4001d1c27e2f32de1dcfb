package com.java.order.service;

import static com.java.view.AppUI.inputInteger;
import static com.java.view.AppUI.inputString;
import static com.java.view.AppUI.orderManagementScreen;

import java.util.ArrayList;
import java.util.List;

import com.java.common.AppService;
import com.java.movie.domain.Movie;
import com.java.movie.repository.MovieRepository;
import com.java.order.repository.OrderRepository;
import com.java.user.domain.User;
import com.java.user.repository.UserRepository;
public class OrderService implements AppService {

	private final UserRepository userRepository = new UserRepository();
	
	private final MovieRepository movieRepository = new MovieRepository();
	
	private final OrderRepository orderRepository = new OrderRepository();
	
	
	@Override
	public void start() {
		
		orderManagementScreen();
		int selection = inputInteger();
		
		switch (selection) {
		case 1:
			
			break;

		case 2:
			
			break;
			
		case 3:
			
			return;
			
		default:
			System.out.println("메뉴를 다시 입력하세요.");
		}
		System.out.println("\n====== 계속 진행하시려면 ENTER를 누르세요 ======");
		inputString();
	}
	
	
	/* DVD 대여 서비스 비즈니스 로직*/
	private void processOrderDvd() {
		/*안쪽에서 메뉴를 한번 더 제공하겠다*/
		while(true) {
			System.out.println("\n=============== 대여 관리 시스템을 실행합니다. ===============");
			System.out.println("[ 1. 대여 가능 DVD 목록 보기 | 2. 대여중인 영화 반납예정일 확인 | 3. 이전으로 돌아가기 ]");
			/*1번은 렌탈 값이 true인걸 가져오면 되는거지, 2번은 회원을 한명 선택을 해야겠지? 그 회원이 대여중인 영화가 어떤 것인지 파악하기 위해 번호를 알아야지. orderhistory테이블을 보면 user_number가 1번이야. 그럼 1번 회원이 어떤 영화를 빌렸는지 정보가 나와있잖아. 즉, return_date값을 조회하면되지.*/
			System.out.println(">>> ");
			int selection = inputInteger();
			
			switch (selection) {
			case 1:
				/*대여가능DVD목록보기*/
				showRentalPossibleList();
				break;
			case 2:
				
				break;
				
			case 3:
				return;
				
			default:
				System.out.println("### 메뉴를 잘못 입력하셨습니다. ");
			}
		
		
		}
	}


	
	
	/* 대여 가능한 DVD 목록 보기 */
	private void showRentalPossibleList() {
		/*오버라이드 한 곳 위에서 변수선언해주자 파이널 ㄱㄱ*/
		List<Movie> movieList = movieRepository.searchByRental("true"); /*문자열로 트루를 주자. 디비에서 때려야하니까*/
		int count = movieList.size(); /*이걸로 미리 받아놓고 이걸로 사용해도 된다. 차곡차곡 쓸꺼면 변수선언해도된다.*/
		
		/*모든 영화가 다 대여중일수도있잖아..대여가능한 영화가 없습니다. 하고 끝내자.*/
		if(count > 0) {
			System.out.printf("\n============================ 검색 결과 (총 %d건) ============================\n", count);
		
			for(Movie m : movieList) {
				System.out.println(m);
			}
			System.out.println("============================================================================");
			System.out.println("### 대여할 DVD의 번호를 입력해 주세요. 이전으로 돌아가려면 0을 입력하세요");
			System.out.print(">>> ");
			int movieNumber = inputInteger();
			
			if(movieNumber != 0) {  /*사용자가 영화를 골랐다 라는 뜻*/
				rentalProcess(movieNumber);
			}
			return; /*실행되지않으면 return~ (그냥 끝내면된다~사실 리턴도 필요가 없다 와일트루가 아니니까..)*/
		
		} else {
			System.out.println("\n### 대여 가능한 DVD가 없습니다. ");
		}
	}


	/* 대여 로직을 수행할 메서드 */
	private void rentalProcess(int movieNumber) {
		/*지금 무비 번호만 딱 입력받은 상태다. 무비 이름도 얘기해주고 싶다면? 메서드를 하나 더 선언해야하는데 귀찮으니..대여자의 이름만..하자*/
		
		System.out.println("### 대여자의 이름을 입력하세요. ");
		System.out.print(">>> ");
		String name = inputString();
		
		
		/*근데 이름을 입력받아도 동명이인이 있을 수 있으니 회원정보를 갖고와야한다..유저레퍼지토리가..위로올라가자 */
		/*	private final UserRepository userRepository = new UserRepository(); 도 위에 추가해주자*/
	
		
		/*사용자 찾아 내야하니 리스트 ㄱㄱ*/
		List<User> users = userRepository.findByUserName(name);
		
		
		/*사용자가 그지같이 지었을 수도 있다. 그럼 조회결과가 하나도 없다. 그래서 리스트가 0일 수도 있으니까*/
		if(users.size() > 0) {/*0보다 크다면 이름이 있었다는 거니까*/
			
			
			List<Integer> userNums = new ArrayList<>(); //지금출력되고 있는 그 회원의 넘버를 리스트에 넣음. 즉, 회원의 정보를 넣어놓고 나중에 입력한 회원의 번호를 검사하겠다.  
			
			
			
			/*그럼또 회원정보를 보여줘야겠지. 반복문이용해서 보여주자*/
			System.out.println("================ 회원 정보 ==============");
			for(User u : users) {
				System.out.println(u);
				userNums.add(u.getUserNumber()); /*이 리스트에는 회원의 정보가 하나씩 들어가있겠다.*/
			}
			
			System.out.println("=======================================");
			System.out.println("\n### 대여할 회원의 번호를 입력하세요.");
			System.out.print(">>> ");
			int userNumber = inputInteger();
			
			
			
			/*근데 또 유저넘버가 그지같을 수도 있으니..> 1번과 2번이 나왔는데 5번을 입력하면 문제생기니까..*/
			/*없는 번호 판단은 유저넘버가 유저스에 있는 번호와 일치하지 않는다면 이라고 판단을 해야 겠지*/
			/*위로가서 넣어주자 이거를 List<Integer> userNums = new ArrayList<>();*/
			if(userNums.contains(userNumber)) { /*포함이 있다면 대여로직 들어가면 된다. 엘스는 목록에 없는 번호를 때린거임*/
				orderRepository.addOrder(movieNumber, userNumber); /*이 메서드는 인트 무비넘버를 전달해주고 누가빌린지 알아야하니 유저넘버도 추가 ㄱㄱ*/
			
			
			
			} else {
				System.out.println("\n### 검색이 된 회원의 번호를 입력해야 합니다.");
			}
			
			
			
			
		} else {
			System.out.println("\n### 대여자 정보가 없습니다. ");
		}
	}
	
	
	
}
